{
  "source_file_path_relative_to_docusaurus_root": "blog/2021-09-15-run-chaos-experiments-on-physical-machines.md",
  "source_file_content_hash": "60a88662bf2098a5b48dd349b727fa62159e99258801a597d059abadbc8577d2",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /run-chaos-experiments-on-physical-machines\ntitle: 'How to run chaos experiments on your physical machine'\nauthors: xiangwang\nimage: /img/blog/chaosd-banner.png\ntags: [Chaos Mesh, Chaos Engineering, Chaosd]\n---",
      "source_content_hash": "329952866f951ef61f3286af129e773f996dea09f27f421d028c986595b97142",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "53eaf0e1",
      "source_content": "![How to run chaos experiments on your physical machine](/img/blog/chaosd-banner.png)",
      "source_content_hash": "8b6f07c76534203f2c88e8e0b0bb3c51cc896d682c5ca0112a2598acd1f34e36",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "![物理マシンでカオス実験を実行する方法](/img/blog/chaosd-banner.png)"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "[Chaos Mesh](https://github.com/chaos-mesh/chaos-mesh) is a cloud-native Chaos Engineering platform that orchestrates chaos in Kubernetes environments. With Chaos Mesh, you can simulate a variety of failures, and use Chaos Dashboard, a web UI, to manage chaos experiments directly. Since it was open-sourced, Chaos Mesh has been adopted by many companies to ensure their systems’ resilience and robustness. But over the past year, we have frequently heard requests from the community asking how to run chaos experiments when the services are not deployed on Kubernetes.",
      "source_content_hash": "b8f09895e7ea957aa915604696f20003be564c47835559910e3bccea255a87c5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "[Chaos Mesh](https://github.com/chaos-mesh/chaos-mesh)は、Kubernetes環境でカオスをオーケストレーションするクラウドネイティブなカオスエンジニアリングプラットフォームです。Chaos Meshを使用すると、さまざまな障害をシミュレートし、Web UIであるChaos Dashboardで直接カオス実験を管理できます。オープンソース化以来、多くの企業がシステムの回復力と堅牢性を確保するためにChaos Meshを採用しています。しかし、過去1年間、コミュニティから「Kubernetesにデプロイされていないサービスでカオス実験を実行する方法」という要望が頻繁に寄せられてきました。"
      }
    },
    {
      "segment_id": "3e6699f4",
      "source_content": "<!--truncate-->",
      "source_content_hash": "f5cded2aa7e288e395fe4f67f9dabda2281904b2f5358d07302b3aa8be0acdfa",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_3e6699f4"
      }
    },
    {
      "segment_id": "e14c9928",
      "source_content": "## What is chaosd",
      "source_content_hash": "928ead69322abea51b87c02189ab6ad3ac1ac35de8647df09d25e6a84f907378",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## chaosdとは"
      }
    },
    {
      "segment_id": "42ad8e83",
      "source_content": "To meet the growing needs of chaos testing on physical machines, we are excited to present an enhanced toolkit called chaosd. You might find the name familiar. That’s because it evolved from `chaos-daemon`, a key component in Chaos Mesh. At TiDB Hackathon 2020, we [refactored chaosd to make it more than a command-line tool](https://pingcap.com/blog/chaos-mesh-remake-one-step-closer-toward-chaos-as-a-service#refactor-chaosd). Now with [chaosd v1.0.1](https://github.com/chaos-mesh/chaosd/releases/tag/v1.0.1), you can simulate specific errors that target physical machines, and then, undo the chaos experiments like nothing had happened.",
      "source_content_hash": "f078959209743227e60fc55d322d8fd643746258ff13ccc09c8b64976f49d904",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "物理マシンでのカオステストの需要が高まる中、私たちはchaosdという強化されたツールキットを発表できることを嬉しく思います。この名前は聞き覚えがあるかもしれません。それは、Chaos Meshの主要コンポーネントである`chaos-daemon`から進化したためです。TiDB Hackathon 2020では、[chaosdをコマンドラインツール以上のものにするためにリファクタリングしました](https://pingcap.com/blog/chaos-mesh-remake-one-step-closer-toward-chaos-as-a-service#refactor-chaosd)。現在、[chaosd v1.0.1](https://github.com/chaos-mesh/chaosd/releases/tag/v1.0.1)を使用すると、物理マシンを対象とした特定のエラーをシミュレートし、何も起こらなかったかのようにカオス実験を元に戻すことができます。"
      }
    },
    {
      "segment_id": "aee0e40d",
      "source_content": "## Benefits of chaosd",
      "source_content_hash": "8a0534ead6d63ee08269ef4ac4e4844eebf61ca2780e0b2c3ba0cea57ef47651",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## chaosdの利点"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "chaosd has the following advantages:",
      "source_content_hash": "bc682479eb2541a529f42426780c9b6763c9aacba0a1a36629077b6366e923be",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "chaosdには以下の利点があります:"
      }
    },
    {
      "segment_id": "1b8c1887",
      "source_content": "- **Easy-to-use**: You can easily create and manage chaos experiments with chaosd commands.\n- **Various fault types**: You can simulate faults to be injected on physical machines at different levels, including process faults, network faults, Java Virtual Machine (JVM) application faults, stress scenarios, disk faults, and host faults.\n- **Multiple work modes**: You can use chaosd as a command-line tool or as a service.",
      "source_content_hash": "1b63c2f0acc4ab482c6bc57dff1336fc4b1a8454a2021e0297c1acc63a0f7038",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- **使いやすさ**: chaosdコマンドで簡単にカオス実験を作成・管理できます。\n- **多様な障害タイプ**: プロセス障害、ネットワーク障害、Java Virtual Machine (JVM)アプリケーション障害、ストレスシナリオ、ディスク障害、ホスト障害など、物理マシンに注入するさまざまなレベルの障害をシミュレートできます。\n- **複数の動作モード**: chaosdをコマンドラインツールとして、またはサービスとして使用できます。"
      }
    },
    {
      "segment_id": "a76548f8",
      "source_content": "Without further ado, let’s give it a try.",
      "source_content_hash": "41f63f036018206a29fc7e30433b7604bea00ed63e9239390718dd2c7a36e5d6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "さっそく試してみましょう。"
      }
    },
    {
      "segment_id": "f2f30ae8",
      "source_content": "## How to use chaosd",
      "source_content_hash": "c853f094d8ce32b96c8325537389fdd79aa55b7f4811eecb10c9292b4aeda4a3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## chaosdの使用方法"
      }
    },
    {
      "segment_id": "dfe931a2",
      "source_content": "In this section, I will walk you through how to inject a network fault with chaosd. Your glibc version must be v2.17 or later versions.",
      "source_content_hash": "00e9031880692fc788a00bb25f2a3ad14edee9186b096541e1d94b943390e6dc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このセクションでは、chaosdを使用してネットワーク障害を注入する方法を説明します。glibcのバージョンはv2.17以降である必要があります。"
      }
    },
    {
      "segment_id": "0037ff70",
      "source_content": "### 1. Download and unzip chaosd",
      "source_content_hash": "08606cc962083b7b0485764aecbab3f7ffdbebb2e844c3b3181eaf41a1f5e973",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### 1. chaosdのダウンロードと解凍"
      }
    },
    {
      "segment_id": "bdc231b1",
      "source_content": "To download chaosd, run the following command:",
      "source_content_hash": "af035b766062e6f2c1ae32dc72d2b5c19278f04cdd96758993797316756440f4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "chaosdをダウンロードするには、次のコマンドを実行します:"
      }
    },
    {
      "segment_id": "be2d5397",
      "source_content": "```bash\ncurl -fsSL -o chaosd-v1.0.1-linux-amd64.tar.gz https://mirrors.chaos-mesh.org/chaosd-v1.0.1-linux-amd64.tar.gz\n```",
      "source_content_hash": "925eb1a114b7ed89f3026d4464decbaa28b1b50ca90b1e989e2fdbbdd9b93b7d",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_be2d5397"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "Unzip the file. It contains two file folders:",
      "source_content_hash": "174456267b8284441fcc14588ce4f05faf8c24b158c0f3b48203b67bf233d15e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ファイルを解凍します。以下の2つのフォルダが含まれています:"
      }
    },
    {
      "segment_id": "bdfae007",
      "source_content": "- `chaosd` contains the tool entry of chaosd.\n- `tools` contains the tools needed to perform the chaos experiment, including [stress-ng](https://wiki.ubuntu.com/Kernel/Reference/stress-ng) (to simulate stress scenarios), [Byteman](https://github.com/chaos-mesh/byteman) (to simulate JVM application faults), and PortOccupyTool (to simulate network faults).",
      "source_content_hash": "e7b2290825916a3a465958629252c78b6d80bab8868a5a00255e33d5102ea110",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- `chaosd`: chaosdのツールエントリが含まれています。\n- `tools`: カオス実験を実行するために必要なツールが含まれており、[stress-ng](https://wiki.ubuntu.com/Kernel/Reference/stress-ng)（ストレスシナリオのシミュレーション）、[Byteman](https://github.com/chaos-mesh/byteman)（JVMアプリケーション障害のシミュレーション）、PortOccupyTool（ネットワーク障害のシミュレーション）などがあります。"
      }
    },
    {
      "segment_id": "8bddee80",
      "source_content": "### 2. Create a chaos experiment",
      "source_content_hash": "bd84302cc93d81f7a23eda590e7b93d5413f87da5bacc94b6a9ba38019d68619",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### 2. カオス実験の作成"
      }
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "In this chaos experiment, the server will be unable to access chaos-mesh.org.",
      "source_content_hash": "b49d1b05ac728266c969e54dcf34892f8f118603d899d2c169da6bf2c6dd08b2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このカオス実験では、サーバーがchaos-mesh.orgにアクセスできなくなります。"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "Run the following command:",
      "source_content_hash": "f862cbcf2effa4fdc7a0e127b8226104aa5732e1678e51799688f2cd45b9efc9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "次のコマンドを実行します:"
      }
    },
    {
      "segment_id": "64b6f348",
      "source_content": "```bash\nsudo ./chaosd attack network loss --percent 100 --hostname chaos-mesh.org --device ens33\n```",
      "source_content_hash": "f813f3337932e2aeff9b7f647575fe24538c55681be6b2abb8e6806c4077a4c5",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_64b6f348"
      }
    },
    {
      "segment_id": "b9aaa519",
      "source_content": "Example output:",
      "source_content_hash": "5cd14a4bfcdbbc322d152d064ba25916845608f0a18a54a1d26ccdf679156032",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "出力例:"
      }
    },
    {
      "segment_id": "ef0d086d",
      "source_content": "```bash\nAttack network successfully, uid: c55a84c5-c181-426b-ae31-99c8d4615dbe\n```",
      "source_content_hash": "a63a590396f4991767d5f8373a81c5e95b34c960ae755d010b39e0e2a207e6ac",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_ef0d086d"
      }
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "In this simulation, the ens33 network interface card cannot send network packets to or receive packets from [chaos-mesh.org](http://chaos-mesh.org). The reason why you have to use `sudo` commands is that the chaos experiment modifies network rules, which require root privileges.",
      "source_content_hash": "be5c253bf6544b444ff78219b5ab7991df720d9401050aaf8a49c12d920dddd8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このシミュレーションでは、ens33ネットワークインターフェースカードが[chaos-mesh.org](http://chaos-mesh.org)との間でネットワークパケットを送受信できなくなります。`sudo`コマンドを使用する必要がある理由は、カオス実験がネットワークルールを変更するためで、これにはroot権限が必要です。"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "Also, don’t forget to save the `uid` of the chaos experiment. You’ll be entering that later as part of the recovery process.",
      "source_content_hash": "06f0aafd6cbb127acb99fc821affaf25c7ec6b4b38d48801c0e3c1d0157d2b7f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "また、カオス実験の`uid`を忘れずに保存してください。後で回復プロセスの一部として入力します。"
      }
    },
    {
      "segment_id": "8c6d7ee7",
      "source_content": "### 3. Verify the results",
      "source_content_hash": "d6cd1c964b9c8a3c5e638a936a92f6f2ab8dc1331d34aefeb131deae198dba1c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### 3. 結果の検証"
      }
    },
    {
      "segment_id": "06e24cc0",
      "source_content": "Use the `ping` command to see if the server can access chaos-mesh.org:",
      "source_content_hash": "4ac5e9f3ca365b8c51714fd2a1ee549f38fade28baad63c98170a87d8f3d6e08",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "`ping`コマンドを使用して、サーバーがchaos-mesh.orgにアクセスできるかどうかを確認します:"
      }
    },
    {
      "segment_id": "7d13cf22",
      "source_content": "```bash\nping chaos-mesh.org\nPING chaos-mesh.org (185.199.109.153) 56(84) bytes of data.\n```",
      "source_content_hash": "e399f8ded600dbf6cb81b101433388fde0d1ce95d19938ed42f29eb5a92aabb3",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_7d13cf22"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "When you execute the command, it’s very likely that the site won’t respond. Press `CTRL`+`C` to stop the ping process. You should be able to see the statistics of the `ping` command: `100% packet loss`.",
      "source_content_hash": "8c3eb17a3e2e36ac193d99d4d01201d0a67375ead7fed406b0f714fc2178a488",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "コマンドを実行すると、おそらくサイトから応答が得られないでしょう。`CTRL`+`C`を押してpingプロセスを停止してください。`ping`コマンドの統計情報として`100%パケットロス`が表示されるはずです。"
      }
    },
    {
      "segment_id": "afa378f7",
      "source_content": "Example output:",
      "source_content_hash": "5cd14a4bfcdbbc322d152d064ba25916845608f0a18a54a1d26ccdf679156032",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "出力例:"
      }
    },
    {
      "segment_id": "a89f84e1",
      "source_content": "```bash\n2 packets transmitted, 0 received, 100% packet loss, time 1021ms\n```",
      "source_content_hash": "092fdd0ea500482bec4fbae897ffce3f841fc0db769aea44953200f085d7d6fa",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_a89f84e1"
      }
    },
    {
      "segment_id": "66819c78",
      "source_content": "### 4. Recover the experiment",
      "source_content_hash": "f98caedc3f303952eac0c90623d91720f4b7838de60a46149fc0d2cca195b6ec",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### 4. 実験の復旧"
      }
    },
    {
      "segment_id": "fbc2db85",
      "source_content": "To recover the experiment, run the following command:",
      "source_content_hash": "c89515aced10516e8c1c38a6c198d8e92f0eb04456dd12102c194b4951ae0a49",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "実験を復旧するには、次のコマンドを実行します:"
      }
    },
    {
      "segment_id": "b73a4a7a",
      "source_content": "```bash\nsudo ./chaosd recover c55a84c5-c181-426b-ae31-99c8d4615dbe\n```",
      "source_content_hash": "60eb5e45bbf12e69b80f6c2012d9a8e114881470ad5013274fd88098b3a47535",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_b73a4a7a"
      }
    },
    {
      "segment_id": "5803caac",
      "source_content": "Example output:",
      "source_content_hash": "5cd14a4bfcdbbc322d152d064ba25916845608f0a18a54a1d26ccdf679156032",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "出力例:"
      }
    },
    {
      "segment_id": "5782e280",
      "source_content": "```bash\nRecover c55a84c5-c181-426b-ae31-99c8d4615dbe successfully\n```",
      "source_content_hash": "044297514523c930e1c2dbf7e68e47d760be2e565363cd3409a60dc4d7bc63d3",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_5782e280"
      }
    },
    {
      "segment_id": "82e90254",
      "source_content": "In this step, you also need to use `sudo` commands because root privileges are required. When you finish recovering the experiment, try to ping chaos-mesh.org again to verify the connection.",
      "source_content_hash": "c8ccd62cc9e1c0758e5af8766d2c703aa9c5841bfe75b38138bbc722fb33f466",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このステップでもroot権限が必要なため、`sudo`コマンドを使用する必要があります。実験の復旧が完了したら、再度chaos-mesh.orgにpingを実行して接続を確認してください。"
      }
    },
    {
      "segment_id": "e06c002e",
      "source_content": "## Next steps",
      "source_content_hash": "3a5d9cbc49e6e5f0c98349dd1cd7cfe5713807fc5f02234240621031925d1f32",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 次のステップ"
      }
    },
    {
      "segment_id": "99d0dd9b",
      "source_content": "### Support dashboard web",
      "source_content_hash": "4111e4a6e0422828286744947272d4f282788fa1d687eaaf144400831676c2b6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### ダッシュボードWebのサポート"
      }
    },
    {
      "segment_id": "d79a4831",
      "source_content": "As you can see, chaosd is fairly easy to use. But we can make it easier—a dashboard web for chaosd is currently under extensive development.",
      "source_content_hash": "90cfff7bec1dfe2ca7edd51b2d76808d081b4a585f7c563437ccd885b0ea8630",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "ご覧の通り、chaosdは非常に使いやすいツールです。しかし、さらに使いやすくするため、chaosd用のダッシュボードWebが現在積極的に開発中です。"
      }
    },
    {
      "segment_id": "2838eb68",
      "source_content": "We will continue to enhance its usability and implement more functionalities such as managing chaos experiments run with chaosd as well as those run with Chaos Mesh. This will provide a consistent and unified user experience for chaos testing on Kubernetes and physical machines. The architecture below is just a simple example:",
      "source_content_hash": "fc3c98e28f68063870648f75dbd3196193f322d756c9b3163dbc19b62c4e9c02",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "私たちは使いやすさをさらに向上させ、chaosdで実行したカオス実験とChaos Meshで実行した実験を一元的に管理する機能など、より多くの機能を実装する予定です。これにより、Kubernetesと物理マシンでのカオステストにおいて一貫性のある統一されたユーザー体験を提供します。以下のアーキテクチャは単純な例です:"
      }
    },
    {
      "segment_id": "4be28ed1",
      "source_content": "![Chaos Mesh's optimized architecture](/img/blog/chaos-mesh-optimized-architecture.png)",
      "source_content_hash": "33e2952600ca3592121bcd483044809efe1ce8a3f531caf4c02969fbe9614d40",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "![Chaos Meshの最適化されたアーキテクチャ](/img/blog/chaos-mesh-optimized-architecture.png)"
      }
    },
    {
      "segment_id": "0e80209e",
      "source_content": "For more, check out [Chaos Mesh's optimized architecture](https://pingcap.com/blog/chaos-mesh-remake-one-step-closer-toward-chaos-as-a-service#developing-chaos-mesh-towards-caas).",
      "source_content_hash": "bbd8cf7c0b68b70812d7ea536f856f6bd1a38450554bd8dfaf6b812a36db74e8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "詳細については、[Chaos Meshの最適化されたアーキテクチャ](https://pingcap.com/blog/chaos-mesh-remake-one-step-closer-toward-chaos-as-a-service#developing-chaos-mesh-towards-caas)をご覧ください。"
      }
    },
    {
      "segment_id": "d1f76d04",
      "source_content": "### Add more fault injection types",
      "source_content_hash": "35c8af2c163d3c2dfc7ead70d78b049081be632571ed44bcf83259fc0ae310bb",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### 追加の障害注入タイプ"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "Currently, chaosd provides six fault injection types. We plan to develop more types that have been supported by Chaos Mesh, including HTTPChaos and IOChaos.",
      "source_content_hash": "9bfb1334f34f2ded9aa708cba96a3fa076cc32dcd8657cc4796dd4a78b3c009c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "現在、chaosdは6種類の障害注入を提供しています。私たちはChaos Meshで既にサポートされているHTTPChaosやIOChaosなど、さらに多くのタイプを開発する予定です。"
      }
    },
    {
      "segment_id": "e9313fef",
      "source_content": "If you are interested in helping us improve chaosd, you are welcome to [pick an issue](https://github.com/chaos-mesh/chaosd/labels/help%20wanted) and get started!",
      "source_content_hash": "c636d580cd32da0c08d088ee3d3f875d3936861318228650ec530e298e0436ee",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "chaosdの改善に興味がある方は、ぜひ[issueを選んで](https://github.com/chaos-mesh/chaosd/labels/help%20wanted)取り組んでください！"
      }
    },
    {
      "segment_id": "48155948",
      "source_content": "## Try it out!",
      "source_content_hash": "41387c021013aa12b6d53975bc1b73d3d43a8e32cd418e423fd2e88f5e34072e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 試してみましょう！"
      }
    },
    {
      "segment_id": "1958bc43",
      "source_content": "If you are interested in using chaosd and want to explore more, check out the [documentation](https://chaos-mesh.org/docs/chaosd-overview). If you come across an issue when you run chaosd, or if you have a feature request, feel free to [create an issue](https://github.com/chaos-mesh/chaosd/issues). We would love to hear your voice!",
      "source_content_hash": "ab115ca65e2a4f60cb32a6ae2b3f07670f68b8381801c070835d1ccfef9bd04c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "chaosdの使用に興味があり、さらに探求したい方は、[ドキュメント](https://chaos-mesh.org/docs/chaosd-overview)をチェックしてください。chaosdの実行中に問題が発生した場合や機能リクエストがある場合は、遠慮なく[issueを作成](https://github.com/chaos-mesh/chaosd/issues)してください。皆さんの声をお待ちしています！"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2021-09-15-run-chaos-experiments-on-physical-machines.md",
  "last_updated_timestamp": "2025-06-05T17:50:36.664712+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "60a88662bf2098a5b48dd349b727fa62159e99258801a597d059abadbc8577d2"
  }
}